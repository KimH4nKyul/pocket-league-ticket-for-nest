services:
  redis:
    image: 'redis:7.2.4-alpine'
    container_name: redis
    volumes:
      - redis-data:/data
      # - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6379:6379'
    # command: redis-server /usr/local/etc/redis/redis.conf

  psql:
    image: 'postgres:16-alpine'
    container_name: psql
    env_file:
      - env/db/.env.psql.dev
    volumes:
      - psql-data:/var/lib/postgresql/data
      - ./env/db/create-database.sql:/backend-entrypoint-initdb.d/create-database.sql
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: ticket-server
    env_file:
      - env/backend/.env.backend.dev
    build:
      context: .
      target: development
      dockerfile: Dockerfile
      args:
        - NODE_PORT=3000
    depends_on:
      redis:
        condition: service_started
      psql:
        condition: service_healthy
    volumes:
      - .:/app:ro
      - /app/prisma
      - /app/node_modules
    ports:
      - '${NODE_PORT:-3000}:${NODE_PORT:-3000}'
    command: sh -c "npm run prisma:dev && npm run start:dev"

volumes:
  redis-data:
  psql-data:
